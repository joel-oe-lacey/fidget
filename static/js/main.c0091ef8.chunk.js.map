{"version":3,"sources":["components/Game/Game.js","helpers/helpers.js","actions/index.js","components/Scoreboard/Scoreboard.js","components/App/App.js","reducers/index.js","reducers/score.js","index.js","assets/arrow.svg"],"names":["Game","dispatch","useDispatch","useState","currentArrow","updateArrow","targetKey","isKeyPressed","setKeyPressed","useEffect","downHandler","key","window","addEventListener","removeEventListener","useKeyCode","arrows","currentArrowIndex","indexOf","splice","Math","floor","random","selectRandomArrow","type","className","src","arrow","alt","Scoreboard","score","useSelector","state","scoreClass","setScoreClass","App","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6RA6BeA,EAtBF,WACT,IAAMC,EAAWC,cADF,EAEqBC,mBAAS,aAF9B,mBAERC,EAFQ,KAEMC,EAFN,MCLO,SAACC,GAAe,IAAD,EACCH,qBADD,mBAC9BI,EAD8B,KAChBC,EADgB,KAiBrC,OAdID,GACAC,GAAc,GAGlBC,qBAAU,WACN,SAASC,EAAT,GAA8B,EAAPC,MACPL,GACRE,GAAc,GAItB,OADAI,OAAOC,iBAAiB,UAAWH,GAC5B,kBAAME,OAAOE,oBAAoB,UAAWJ,MACpD,CAACJ,IAEGC,GDTqBQ,CAAWX,KAInCC,ECQyB,SAACD,GAC9B,IAAMY,EAAS,CAAC,YAAa,UAAW,aAAc,aAChDC,EAAoBD,EAAOE,QAAQd,GAIzC,OAFAY,EAAOG,OAAOF,EAAmB,GAE1BD,EADWI,KAAKC,MAAsB,EAAhBD,KAAKE,WDdbC,CAAkBnB,IAEnCH,EEfuB,CAC3BuB,KAAM,eFiBN,OACQ,6BAASC,UAAU,QACf,yBACIC,IAAKC,IACLF,UAAS,qBAAgBrB,GACzBwB,IAAI,wBGFTC,G,MAfI,WACf,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACnCG,EFuBmB,SAACH,GAC1B,QAAQ,GACJ,KAAMA,GAAS,IACX,MAAO,UACX,KAAMA,GAAS,GACX,MAAO,QACX,KAAMA,GAAS,GACX,MAAO,aACX,KAAMA,GAAS,GACX,MAAO,MACX,QACI,MAAO,IElCII,CAAcJ,GAEjC,OACI,6BAASL,UAAU,cACf,wBAAIA,UAAU,SAAd,4BACA,wBAAIA,UAAU,eAAd,wDACA,wBAAIA,UAAU,SAAd,eACI,0BAAMA,UAAWQ,GAAaH,OCD/BK,MATf,WACE,OACE,6BAASV,UAAU,OACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,eCNOW,EAAcC,0BAAgB,CACvCP,MCJwB,WAAwB,IAAvBE,EAAsB,uDAAd,EAAGM,EAAW,uCAC/C,OAAQA,EAAOd,MACX,IAAK,YACD,OAAOQ,EAAQ,EACnB,QACI,OAAOA,MCGbO,EAAQC,sBAAYJ,EAAaK,iCAEvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,U,kBCd1BC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.c0091ef8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Game.scss';\nimport arrow from \"../../assets/arrow.svg\";\nimport { useKeyCode, selectRandomArrow } from \"../../helpers/helpers\";\nimport { useDispatch } from 'react-redux';\nimport { setScore } from '../../actions';\n\nconst Game = () => {\n    const dispatch = useDispatch()\n    const [currentArrow, updateArrow] = useState(\"ArrowDown\");\n    const correctArrowPressed = useKeyCode(currentArrow);\n\n    if (correctArrowPressed) {\n        const newArrow = selectRandomArrow(currentArrow);\n        updateArrow(newArrow);\n        dispatch(setScore());\n    }\n\n    return (\n            <section className=\"game\">\n                <img \n                    src={arrow}\n                    className={`game-arrow ${currentArrow}`}\n                    alt=\"Directional arrow\"\n                />\n            </section>\n        )\n};\n\nexport default Game;\n","import { useState, useEffect } from 'react';\n\nexport const useKeyCode = (targetKey) => {\n    const [isKeyPressed, setKeyPressed] = useState();\n    // Only allow fetching each keypress event once to prevent infinite loops\n    if (isKeyPressed) {\n        setKeyPressed(false);\n    }\n\n    useEffect(() => {\n        function downHandler({ key }) {\n            if (key === targetKey) {\n                setKeyPressed(true);\n            }\n        }\n        window.addEventListener('keydown', downHandler);\n        return () => window.removeEventListener('keydown', downHandler);\n    }, [targetKey]);\n\n    return isKeyPressed;\n}\n\nexport const selectRandomArrow = (currentArrow) => {\n    const arrows = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'];\n    const currentArrowIndex = arrows.indexOf(currentArrow);\n    //remove current arrow to avoid repeating\n    arrows.splice(currentArrowIndex, 1)\n    const randIndex = Math.floor(Math.random() * 3);\n    return arrows[randIndex];\n}\n\nexport const setScoreClass = (score) => {\n    switch (true) {\n        case (score >= 100):\n            return 'hundred';\n        case (score >= 50):\n            return 'fifty';\n        case (score >= 25):\n            return 'twentyfive';\n        case (score >= 10):\n            return 'ten';\n        default:\n            return '';\n    }\n}","export const setScore = () => ({\n    type: 'SET_SCORE'\n});","import React from 'react';\nimport './Scoreboard.scss';\nimport { useSelector } from 'react-redux';\nimport { setScoreClass } from \"../../helpers/helpers\";\n\n\nconst Scoreboard = () => {\n    const score = useSelector(state => state.score)\n    const scoreClass = setScoreClass(score);\n\n    return (\n        <section className=\"scoreboard\">\n            <h1 className='title'>Sequence : A Fidget Game</h1>\n            <h2 className='instruction'>Press the displayed arrow key to increase your score</h2>\n            <h2 className='score'> Your Score:\n                <span className={scoreClass}>{score}</span>\n            </h2> \n        </section>\n    )\n};\n\nexport default Scoreboard;","import React from 'react';\nimport './App.scss';\nimport Game from '../Game/Game';\nimport Scoreboard from '../Scoreboard/Scoreboard';\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <Game />\n      <Scoreboard />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { scoreReducer } from './score';\n\nexport const rootReducer = combineReducers({\n    score: scoreReducer\n});","export const scoreReducer = (state = 0, action) => {\n    switch (action.type) {\n        case 'SET_SCORE':\n            return state + 1;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>    \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/arrow.7102ccf5.svg\";"],"sourceRoot":""}